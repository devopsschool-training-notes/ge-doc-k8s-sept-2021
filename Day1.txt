Rajesh Kumar
=====================

9: 00 AM - 5 PM IST
--------------------------
Lunch - 1 - 2 PM IST

2 BREAK - 
	- 15mins
	10.30 AM 
	3.30 PM
-----------------------
DEMO + LAB = AWS
============================================
What is Docker?
--------------------------------------------
	TOOL & PLATFORM
	- Managing Container
	Release
		Community 
		Enterprise
	Version
		20.X
	Golang
	AKA DOCKER Engine
	


What is Tool?
--------------
	SAVE COST
		- RUNNING APPS IN DATACENTER
	SAVE TIME	
		- For running APP
	IMP* QUALITY
		- Software Quality


What is Container?
	- Its your APP 
	- Has 
		1 MNT
		1 NET
		1 PID MAP
		1 USER
	- fully indepedent isolat App run time env.

==============================================
What are the resources needed to run 1 APP?
==============================================

HARDWARE -> OS -> JAVA -> TOMCAT -> APP
----------------------------------------

OS
   KERNAL			FROM WHERE	NEEDED		OS-ALLOWED	OS-CAN
		ROOTFS		MNT NS		1		1		MUL
		PID ID		PID NS		1		1		MUL
		USER		USER NS		1		MUL		MUL
		NETWORK		NET NS		1		1		MUL	

		CPU+RAM		CGROUPS
		USER PERM 	CAPABILITIES


The kernel is a computer program at the core of a computer's operating system and has complete control over everything in the system. 

====================================================================
1960 - 2000		2000-2015		2015 ---------		
-------------------------------------------------------------------'
Phycial Server		VMs			Container
		INTERNET
---------------------------------------------------------------------
1 Day			3 mins			1 Sec	
			OS
			- 1 MNT
			- 1 NET
			- MUL USE
			- 1 PID
-------------------------------------------------------
APP			APP



==================================================
Docker Architecture
--------------------------------------------------------
Human --> Docker client ----RESTFUL----> Docker Server(Deamon) -> ContainerD --> Kernal
         ----------------------------------------------
			Docker Engine



Container LifeCycle
--------------------------
create -> start -> stop -> start -> restart -> pause -> unpause -> kill -> remove

VMs LifeCycle
--------------------------
create -> start -> stop -> start -> restart -> pause -> unpause -> kill -> remove



Docker Components
==================================================
1. Docker Engine

2. Docker Image

VM Images
	- Create vms
Docker Image 
	- Create container
=====================================
VM Images =  Docker Images
----------------------------------
	FILESYSTEMS
	- Collection of files/dir

VM Images
-------------------
BOOT FILESYSTEMS + ROOT FILESYSTEMS + USER FILESYSTEMS + APP FILESYSTEMS
------------------------------------------------------------------------
LINUX KERNAL       UBUNTU             root               ls 
LINUX KERNAL       UBUNTU             apache 		 apache	
LINUX KERNAL       UBUNTU             tomcat		 jdk       tomcat  	app


Docker Images
-------------------
ROOT FILESYSTEMS + USER FILESYSTEMS + APP FILESYSTEMS + APP FILESYSTEMS
------------------------------------------------------------------------
UBUNTU             root               ls 
UBUNTU             apache 		 apache	
UBUNTU             tomcat		 jdk       tomcat  	app

ONE COPY OF IMAGE
		--- GET MOUTED TO EACH CONTAINER
		AKA 
		1 MNT

FROM 1 Image - You can create multiple Container

TYPES OF FILESYSTEMS
---------------------------
BOOT FILESYSTEMS == WINDOWS KERNEL OR LINUX KERNEL
ROOT FILESYSTEMS == WINDOWS 10 OR WINDOWS 2016 OR UBUNTU OR CENTOS OR REDHAT
USER FILESYSTEMS ==
APP FILESYSTEMS  ==

3. Registry
		Repository
				Collection of Filesystem(s)
				--------------------------	
				        docker image

		a Place where you can get docker image
		- hub.docker.com
		- google reg
		- azure repo
		- ecr
		- docker registry
		- artifactory
		- nexus


4. Docker Container
--------------------------------------------
HUMAN -> CLIENT  -----> Server (DockerD)	-----> ContainerD -------> Kernel
	run image
			CHECK IMAGE EXIST(YES)
						1 USER
						1 MOUNT FROm IMAGE
						1 NET
						1 PID MAP
						------------
						ATTACH USER TO MNT - NET - PID
						----------------------------'					
								Container


=============================================================================
Assigment#1
--------------------------------- 30 mins
What is Docker and Container? Details explaination with Image!
- What is Docker?
- What is Container?
- Benefit of Docker?
- Docker Architecture
- Container lifecycle
- How Docker Works!!

Where to SUBMIT?

Docker Installation
======================================
35.154.144.75
centos
centos123

https://devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html

CE Vs EE
https://www.devopsschool.com/blog/difference-between-docker-community-edition-ce-vs-docker-enterprise-edition-ee-in-2020/

======================= LAB=================================

  9  docker -v
   10  sudo systemctl enable docker
   11  sudo systemctl start docker
   12  clear
   13  docker info
   14  clear
   15  which docker
   16  which dockerd
   17  ps -eaf | grep dockerd
   18* which container
   19  ps -eaf | grep containerd
   20  docker pull httpd
   21  clear
   22  docker images
   23  docker ps
   24  docker ps -a
   25  docker create httpd
   26  docker ps
   27  docker ps -a
   28  docker create --name raj1 httpd
   29  docker ps -a
   30  clear
   31  docker ps -a
   32  docker start raj1
   33  docker ps -a
   34  docker stop raj1
   35  docker ps -a
   36  docker start raj1
   37  docker ps -a
   38  docker ps -a
   39  clear
   40  docker restart raj1
   41  docker ps -a
   42  docker pause raj1
   43  docker ps -a
   44  docker pause 6b131d06d9f2
   45  docker unpause raj1
   46  docker ps -a
   47  clear
   48  docker ps -a
   49  docker kill raj1
   50  docker ps -a
   51  docker ps
   52  docker ps -a
   53  docker start raj1
   54  docker ps -a
   55  clear
   56  docker rm raj1
   57  docker ps -a
   58  docker rm 6b131d06d9f2
   59  docker ps -a
   60  docker stop 3f52f7a563f5
   61  docker rm 3f52f7a563f5
   62  docker p s-a
   63  clear
   64  docker ps -a
   65  docker create --name raj2 httpd
   66  docker start raj2
   67  docker stop raj2
   68  docker start raj2
   69  docker restart raj2
   70  docker pause raj2
   71  docker unpause raj2
   72  docker kill raj2
   73  docker rm raj2

Assignment
========================= Write a post ======================
What is diff between docker pause/unpause and stop/kill?


















