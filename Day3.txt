Docker Compose
===================================
13.232.89.6
username - centos
password - centos123
=======================================================
What is Docker Compose
-------------------------------------
- tool
	reads
		docker-compose.yaml
		contains
			Services


Services:
	Service1
		build: dockerfile
		image: imagename
		env
		port
		volume
		net

	Service2
		build
		image
		env
		port
		volume
		net

	Service3
		build
		image
		env
		port
		volume
		net
-----------------------------------------------
		docker-compose up
		docker-compose down
		docker-compose up/down Service1

How to insall docker-compose?
 1002  sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(-$(uname -m)" -o /usr/local/bin/docker-compose
 1003  sudo chmod +x /usr/local/bin/docker-compose
 1004  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
 1005  docker-compose --version


https://devopsschool.com/tutorial/docker/labs/index.html

version: '2'
services:
  wordpress:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - 80:80 # change ip if required
    volumes:
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
    depends_on:
      - db
    networks:
      - wordpress-network
  db:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - 3306:3306 # change ip if required
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: password
    networks:
      - wordpress-network
networks:
  wordpress-network:
      driver: bridge

 1018  docker-compose.yaml
 1019  vi docker-compose.yaml
 1020  docker-compose up -d
 1021  clear
 1022  docker-compose ps
 1023  docker-compose down
 1024  docker-compose ps
 1025  docker-compose up -d
 1026  docker ps
 1027  docker-compose stop
 1028  docker ps -a
 1029  clear
 1030  docker-compose start
 1031  docker-compose ps
 1032  docker-compose logs
 1033  clear
 1034  docker-compose help
 1035  clear
 1036  docker-compose ps
 1037  docker-compose help scale
 1038  docker-compose scale wordpress=3
 1039  clear
 1040  history


=================================================================================
Lab - 15 mins
& Review
https://devopsschool.com/tutorial/docker/labs/index.html

Assignment - 15 mins
Title of Post ->  List out 10 Feature of Docker-compose

Docker Compose Example Collection

docker-compose-1.yaml


Kubernetes
====================================


Master AKA Control Plane
- API Server		-> POD -> Container -> Docker Image -> Google Registry
- ETCD			-> POD -> Container -> Docker Image -> Google Registry
- Controller mgmr	-> POD -> Container -> Docker Image -> Google Registry
- Schedular		-> POD -> Container -> Docker Image -> Google Registry

- Kube Proxy		-> POD -> Container -> Docker Image -> Google Registry
- Kubectl
- Kubelet
- Docker
- kubeadm init

Worker AKA Node AKA Minion
- Kubelet
- Docker
- Kubectl
- kubeadm join
- Kube Proxy		-> POD -> Container -> Docker Image -> Google Registry


Workstation  AKA Laptop
- Kubectl
	- Package

How to setup a clustor?
https://github.com/kelseyhightower/kubernetes-the-hard-way

Manual way
- Kubeadm

Manual way but with Cloud Integ
- kops

Managed Clustor
- Azure - AKS
- Aws - EKS
- GC - GKE

Dev Clustor
- minikube - Create VM
	

Multi Clustor
- kind

============================================================

Title 
Assignment#1 - What is Kubernetes and its feature
Assignment#2 - How kubernetes works? Explain each components with Short Summary

=================================================================

Master + Workstation = 15.206.91.230
centos
centos123
=======================================
https://www.devopsschool.com/blog/how-to-change-the-cgroup-driver-from-cgroupfs-systemd-in-docker/
https://www.devopsschool.com/blog/setting-up-kubernetes-clusters-using-kubeadm-manual-way-in-rhel-7-centos7/


Worker	= 3.109.216.102
============================



====================================================================================
To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf
====================================================================================
You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/
====================================================================================
Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.22.14:6443 --token szx068.id2y3xv1uuawyvb3 \
        --discovery-token-ca-cert-hash sha256:b990afd0f9b6a76a283e55960294674f08f5d43f9d8555c3c11925ca1287e903



    4  kubectl
    5  kubectl version
    6  kubectl help
    7  kubectl cluster-info
    8  kubectl get nodes
   12  kubectl get pods --all-namespaces
   13  kubectl api-resources
   14  kubectl api-resources | wc -l












